# import os
# from reportlab.lib.pagesizes import letter
# from reportlab.pdfgen import canvas

# def generate_pdf(vulnerabilities, ServiceType, ServiceVersion):
#     # Check if the Reports directory exists, if not, create it
#     if not os.path.exists('Reports'):
#         os.makedirs('Reports')

#     # Create a PDF file
#     pdf_filename = f"Reports/{ServiceType}_{ServiceVersion}_vulnerability_report.pdf"
#     c = canvas.Canvas(pdf_filename, pagesize=letter)

#     # Set font and font size
#     c.setFont("Helvetica", 12)

#     # Initialize Y position for drawing
#     y_position = 775

#     if vulnerabilities:
#         for vuln in vulnerabilities:
#             c.drawString(50, y_position, f"CVE ID: {vuln['id']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Summary: {vuln['summary']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"CVSS Score: {vuln['cvss_score']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Severity: {vuln['severity']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Published Date: {vuln['published_date']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Access Vector: {vuln['access_vector']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Authentication: {vuln['authentication']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Availability Impact: {vuln['availability_impact']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Confidentiality Impact: {vuln['confidentiality_impact']}")
#             y_position -= 20
#             c.drawString(50, y_position, f"Integrity Impact: {vuln['integrity_impact']}")
#             y_position -= 40  # Add some space between entries

#             # Check if we need to create a new page
#             if y_position < 100:
#                 c.showPage()
#                 c.setFont("Helvetica", 12)
#                 y_position = 750

#         # Closing note
#         c.showPage()
#         c.setFont("Helvetica-Bold", 16)
#         c.drawString(50, 750, "Thank you for using our vulnerability scanner!")
#         c.setFont("Helvetica", 12)
#         c.drawString(50, 730, "Stay secure and keep your software up to date.")

#     else:
#         c.drawString(50, 750, "No vulnerabilities found for the specified version.")

#     # Save the PDF
#     c.save()
#     print(f"PDF report saved as {pdf_filename}")
