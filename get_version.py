import re
import requests
import mysql.connector
import os
from bs4 import BeautifulSoup
import pymongo



def extract_apache_version(server_header):
    # Extract version number from Apache server header
    match = re.search(r'Apache\/([\d.]+)', server_header)
    if match:
        return match.group(1)
    return None

def extract_mysql_version(version_string):
    # Extract version number from MySQL version string
    match = re.search(r'([\d.]+)', version_string)
    if match:
        return match.group(1)
    return None

def extract_wordpress_version(version_string):
    # Extract version number from WordPress version string
    match = re.search(r'(\d+\.\d+(\.\d+)?)', version_string)
    if match:
        return match.group(1)
    return None

def get_apache_version(service):
    url = f"http://{service['ip']}:{service['port']}/"
    response = requests.get(url)
    # Extract Apache version from response headers
    apache_version = response.headers.get('Server')
    return extract_apache_version(apache_version)

def extract_mongodb_version(version_string):
    # Extract version number from MongoDB version string
    match = re.search(r'([\d.]+)', version_string)
    if match:
        return match.group(1)
    return None

def get_mysql_version(service):
    # Get root password from environment variable
    # root_password = os.environ.get("MYSQL_ROOT_PASSWORD")
    # print("MYSQL_ROOT_PASSWORD:", root_password)
    root_password = "my-secret-pw"

    # Connect to MySQL database
    try:
        connection = mysql.connector.connect(
            host=service['ip'],
            port=service['port'],
            user='root',
            password=root_password
        )
        cursor = connection.cursor()
        cursor.execute("SELECT VERSION()")
        mysql_version = cursor.fetchone()[0]
        cursor.close()
        connection.close()
        return extract_mysql_version(mysql_version)
    except mysql.connector.Error as err:
        print("MySQL connection error:", err)
        return None

def get_wordpress_version(service):
    url = f"http://{service['ip']}:{service['port']}/"
    try:
        response = requests.get(url)
        if response.status_code == 200:
            soup = BeautifulSoup(response.content, 'html.parser')
            # Assuming version information is contained in a meta tag with name="generator"
            version_tag = soup.find('meta', attrs={'name': 'generator'})
            if version_tag:
                version = version_tag.get('content')
                return extract_wordpress_version(version)
            else:
                print("Failed to find version information in HTML.")
                return None
        else:
            print(f"Failed to retrieve WordPress homepage. Status code: {response.status_code}")
            return None
    except requests.RequestException as e:
        print(f"An error occurred while retrieving WordPress homepage: {e}")
        return None

def get_mongodb_version(service):
    try:
        # Connect to MongoDB server
        client = pymongo.MongoClient(host=service['ip'], port=service['port'])
        # Retrieve server info
        server_info = client.server_info()
        # Extract MongoDB version from server info
        mongodb_version = server_info['version']
        return extract_mongodb_version(mongodb_version)
    except pymongo.errors.PyMongoError as e:
        print(f"An error occurred while retrieving MongoDB version: {e}")
        return None
