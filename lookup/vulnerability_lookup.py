import nvdlib

def lookup_vulnerabilities(service_type, service_version):
    # Construct the CPE name for the given service type and version
    print("service_type: "+service_type)
    print("service_version: "+service_version)
    cpe_name = f"cpe:2.3:a:{service_type}:{service_type}:{service_version}:*:*:*:*:*:*:*"
    cves = nvdlib.searchCVE(cpeName=cpe_name)
    # Format the output to include only CVE ID and summary for the specific CPE
    vulnerabilities = []
    for cve in cves:
        summary = cve.descriptions[0].value if cve.descriptions else "No description available"
        cvss_score = cve.score if cve.score else "N/A"
        cvss_score_formatted = f"CVSS Version: {cvss_score[0]}, Base Score: {cvss_score[1]}, Severity: {cvss_score[2]}"
        severity = cve.v2severity if hasattr(cve, 'v2severity') else "N/A"
        published_date = cve.published if cve.published else "N/A"
        references = cve.references if cve.references else []
        access_vector = cve.v2accessVector if hasattr(cve, 'v2accessVector') else "N/A"
        authentication = cve.v2authentication if hasattr(cve, 'v2authentication') else "N/A"
        availability_impact = cve.v2availabilityImpact if hasattr(cve, 'v2availabilityImpact') else "N/A"
        confidentiality_impact = cve.v2confidentialityImpact if hasattr(cve, 'v2confidentialityImpact') else "N/A"
        integrity_impact = cve.v2integrityImpact if hasattr(cve, 'v2integrityImpact') else "N/A"

        vulnerability_info = {
            'id': cve.id,
            'summary': summary,
            'cvss_score': cvss_score_formatted,
            'severity': severity,
            'published_date': published_date,
            'references': references,
            'access_vector': access_vector,
            'authentication': authentication,
            'availability_impact': availability_impact,
            'confidentiality_impact': confidentiality_impact,
            'integrity_impact': integrity_impact
        }
        vulnerabilities.append(vulnerability_info)


    return vulnerabilities
